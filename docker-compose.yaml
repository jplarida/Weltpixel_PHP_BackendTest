version: '3'

services:
#start of microservice backbone
  mongo:
    image: mongo:latest
    container_name: we-supply-mongodb-container
    #environment:
    #  - MONGO_INITDB_ROOT_USERNAME=admin
    #  - MONGO_INITDB_ROOT_PASSWORD=adminpassword
    volumes:
      - mongodb_data:/data/db
    restart: on-failure
    ports:
      - "27017:27017"
    networks:
      - weltpixel_php_backendtest_app_network
    command: ["mongod", "--bind_ip_all", "--port", "27017"]
#admin:pass
  mongodb-ui:
    image: mongo-express:latest
    container_name: we-supply-mongodb-ui-container
    environment:
      - MONGOCLIENT_CONNECTION_URL=mongo://admin:adminpassword@mongo:27017
    ports:
      - "8081:8081"
    networks:
      - weltpixel_php_backendtest_app_network
    depends_on:
      - mongo
    restart: "unless-stopped"

#guest/guest
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: we-supply-rabbitmq-container
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    ports:
      - "25672:25672"
      - "15672:15672"
    networks:
      - weltpixel_php_backendtest_app_network
    restart: always

volumes:
  mongodb_data:
  rabbitmq_data:

networks:
  weltpixel_php_backendtest_app_network:
    driver: bridge
#end of microservice backbone
#base images
# concept is to create base images but anchoring it to the 2 crucial technology of monolog and rabbitmq
  # BImongo:
  #   image: we-supply-bi-mongo-image:latest
  #   container_name: we-supply-bi-mongo-image-container
  #   build:
  #     context: ./microservices/baseimages/BI-monolog-database
  #     dockerfile: Dockerfile.bi-mongo
 
  # BImailer:
  #   image: we-supply-bi-mailer-image:latest
  #   container_name: we-supply-bi-mailer-image-container
  #   build:
  #     context: ./microservices/baseimages/BI-monolog-mailer
  #     dockerfile: Dockerfile.bi-mailer
#end of base images
#start of microservices
  # php_microservice_mongodb:
  #   image: "mongodb/mongodb:1.7.2"
  #   container_name: php_microservice_mongodb_container
  #   networks:
  #     - app_network
  #   # Add other configuration as needed for your microservice

  # php_microservice_phpmailer:
  #   image: "phpmailer/phpmailer:^5.2"
  #   container_name: php_microservice_phpmailer_container
  #   networks:
  #     - app_network
  #   # Add other configuration as needed for your microservice
#end of microservices